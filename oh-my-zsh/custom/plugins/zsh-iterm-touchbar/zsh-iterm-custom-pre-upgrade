 # CURRENT_DIR
  # -----------
  echo -ne "\033]1337;SetKeyLabel=F1=👉 $(echo $(pwd) | awk -F/ '{print $(NF-1)"/"$(NF)}')\a"
  bindkey -s '^[OP' 'pwd \n'



  # GIT
  # ---
  # Check if the current directory is in a Git repository.
  command git rev-parse --is-inside-work-tree &>/dev/null || return

  # Check if the current directory is in .git before running git checks.
  if [[ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == 'false' ]]; then

    # Ensure the index is up to date.
    git update-index --really-refresh -q &>/dev/null

    # String of indicators
    local indicators=''

    indicators+="$(git_uncomitted)"
    indicators+="$(git_unstaged)"
    indicators+="$(git_untracked)"
    indicators+="$(git_stashed)"
    indicators+="$(git_unpushed_unpulled)"

    [ -n "${indicators}" ] && touchbarIndicators="🔥[${indicators}]" || touchbarIndicators="🙌";

    echo -ne "\033]1337;SetKeyLabel=F2=🎋 $(git_current_branch)\a"
    echo -ne "\033]1337;SetKeyLabel=F3=$touchbarIndicators\a"
    echo -ne "\033]1337;SetKeyLabel=F5=✉️\a";

    # bind git actions
    bindkey -s '^[OQ' 'git branch -a \n'
    bindkey -s '^[OR' 'git status \n'
    bindkey -s '^[[15~' "git push origin $(git_current_branch) \n"

    echo -ne "\033]1337;SetKeyLabel=F4=👊\a"
    local commitMessage=''
    bindkey -s '^[OS' 'commit \n'

    echo -ne "\033]1337;SetKeyLabel=F6=📥\a"
    bindkey -s '^[[17~' "git pull origin $(git_current_branch) \n"
  fi

  # PACKAGE.JSON
  # ------------
  # if [[ -f package.json ]]; then
  #   echo -ne "\033]1337;SetKeyLabel=F5=⚡️ npm-run\a"
  #   bindkey "${fnKeys[5]}" _displayNpmScripts
  # fi
}

